#!/bin/bash

helpme() {
    local gg="$(tput setaf 2)$(tput bold)"
    local g="$(tput sgr0)$(tput setaf 2)"
    local y=$(tput setaf 3)
    local x=$(tput sgr0)
    cat <<MSG
usage: $0 [command]

Spotlight CLI.

If a command takes a [path], the results will be restricted to that directory.

${gg}apps                     $x Installed applications.
${gg}attr                     $x Attributes that can be used with "spot <query>".
${gg}author ${g}<query> [path]    $x Files from author.
${gg}ext ${g}<query> [path]       $x Any files with that extension.
                             $y $ spot ext pdf ~
${gg}file ${g}<query> [path]      $x Find files.
                             $y $ spot vimrc ~/dotfiles
${gg}size ${g}<rel> <size> [path] $x Find all files of a certain size in bytes.
                          Or (k)ilobytes, (m)egabytes, (g)igabytes.
                             $y $ spot size '<=' 1m
                             $y $ spot size '>=' 1g
${gg}user ${g}<user|uid> [path]   $x All files from user.
                             $y $ spot user mhi
                             $y $ spot user \$UID /var
${gg}<query> ${g}[path]           $x Generic query. Supports any attribute from "spot attr".
                             $y $ spot foo
                             $y $ spot 'kMDItemMusicalGenre == "*Metal*"' /data/music
${gg}<path>                   $x Get all attributes for that path.
                             $y $ spot /
                             $y $ spot ~/fancy.gif
MSG
}

find_apps() {
    for dir in {,$HOME}/Applications; do
        mdfind -onlyin $dir 'kMDItemContentType == "com.apple.application-*"'
    done
}

find_attr_with_desc() {
    mdimport -A | awk -F '\t\t' '{ print $1 "|" $3 }' | tr -d \' | column -ts \|
}

find_author() {
    local query=$1
    local dir=$2
    mdfind "kMDItemAuthors == \"*${query}*\"" ${dir:+ -onlyin "$dir"}
}

find_ext() {
    local ext=$1
    local dir=$2
    mdfind "kMDItemFSName == \"*.${ext}\"" ${dir:+ -onlyin "$dir"}
}

find_file() {
    local file=$1
    local dir=$2
    mdfind -name "$file" ${dir:+ -onlyin "$dir"}
}

find_size() {
    local relation=$1
    local size=$2
    local dir=$3
    if   [[ "$size" =~ ^[0-9]+k$ ]]; then size=$(( ${size%%k} * 1024 ))
    elif [[ "$size" =~ ^[0-9]+m$ ]]; then size=$(( ${size%%m} * 1024 * 1024 ))
    elif [[ "$size" =~ ^[0-9]+g$ ]]; then size=$(( ${size%%g} * 1024 * 1024 * 1024 ))
    fi
    mdfind "kMDItemFSSize $relation $size" ${dir:+ -onlyin "$dir"}
}

find_user() {
    local user=$1
    local dir=$2
    if [[ "$user" =~ ^[0-9]+$ ]]; then
        mdfind "kMDItemFSOwnerUserID == $user" ${dir:+ -onlyin "$dir"}
    else
        mdfind "kMDItemFSOwnerUserID == \"$(id -u $user)\"" ${dir:+ -onlyin "$dir"}
    fi
}

no_command_given() {
    if [ -e "$1" ]; then
        mdls "$1"
    else
        mdfind "$1" ${2:+ -onlyin "$2"}
    fi
}

main() {
    [ $(uname) != Darwin ] &&
        { 1>&2 echo "Thou hast angered me; this is not Darwin!"; exit 1; }

    case "$1" in
        apps)   find_apps               ;;
        attr)   find_attr_with_desc     ;;
        author) shift; find_author "$@" ;;
        ext)    shift; find_ext    "$@" ;;
        file)   shift; find_file   "$@" ;;
        size)   shift; find_size   "$@" ;;
        user)   shift; find_user   "$@" ;;
        '')     helpme                  ;;
        *)      no_command_given "$@"   ;;
    esac
}

main "$@"
